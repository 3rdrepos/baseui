package com.soundstep.baseui.demo.commands {	import com.soma.core.controller.Command;	import com.soma.core.interfaces.ICommand;	import com.soma.debugger.events.SomaDebuggerEvent;	import com.soundstep.baseui.demo.SomaApplication;	import com.soundstep.baseui.demo.events.EventConstants;	import com.soundstep.baseui.demo.models.ObjectsModel;	import com.soundstep.baseui.demo.wires.InitializeWire;	import com.soundstep.baseui.demo.wires.ObjectsWire;	import com.soundstep.baseui.demo.wires.UIWire;	import flash.events.Event;	/**	 * <b>Author:</b> Romuald Quantin - <a href="http://www.soundstep.com/" target="_blank">www.soundstep.com</a><br />	 * <b>Company:</b> Less Rain - <a href="http://www.lessrain.com/" target="_blank">www.lessrain.com</a><br />	 * <b>Class version:</b> 1.0<br />	 * <b>Actionscript version:</b> 3.0<br />	 * <b>Copyright:</b> 	 * <br />	 * <b>Date:</b> Feb 16, 2010<br />	 * <b>Usage:</b>	 * @example	 * <listing version="3.0"></listing>	 */		public class StartCommand extends Command implements ICommand {		//------------------------------------		// private, protected properties		//------------------------------------						//------------------------------------		// public properties		//------------------------------------								//------------------------------------		// constructor		//------------------------------------				public function StartCommand() {					}				//		// PRIVATE, PROTECTED		//________________________________________________________________________________________________								// PUBLIC		//________________________________________________________________________________________________				public function execute(e:Event):void {			switch (e.type) {
				case EventConstants.START:					addModel(ObjectsModel.NAME, new ObjectsModel());
					addWire(InitializeWire.NAME, new InitializeWire());					addWire(ObjectsWire.NAME, new ObjectsWire());					addWire(UIWire.NAME, new UIWire());					if (SomaApplication(soma).debugMode) dispatchEvent(new SomaDebuggerEvent(SomaDebuggerEvent.MOVE_TO_TOP));					break;
			}
		}			}}