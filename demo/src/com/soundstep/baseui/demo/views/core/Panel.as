package com.soundstep.baseui.demo.views.core {	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.Rectangle;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	/**	 * <b>Author:</b> Romuald Quantin - <a href="http://www.soundstep.com/" target="_blank">www.soundstep.com</a><br />	 * <b>Company:</b> Less Rain - <a href="http://www.lessrain.com/" target="_blank">www.lessrain.com</a><br />	 * <b>Class version:</b> 1.0<br />	 * <b>Actionscript version:</b> 3.0<br />	 * <b>Copyright:</b> 	 * <br />	 * <b>Date:</b> Nov 23, 2009<br />	 * <b>Usage:</b>	 * @example	 * <listing version="3.0"></listing>	 */		public class Panel extends Sprite {		//------------------------------------		// private, protected properties		//------------------------------------				protected var _background:Sprite;		protected var _title:String;		protected var _titleBarName:TextField;		protected var _hit:Sprite;				protected var _isDragging:Boolean;		protected var _hasBeenDragged:Boolean;				protected var _widthWindow:Number;		protected var _heightWindow:Number;				//------------------------------------		// public properties		//------------------------------------						//------------------------------------		// constructor		//------------------------------------				public function Panel(title:String = "", widthWindow:Number = 100, heightWindow:Number = 100) {			_title = title;			_widthWindow = widthWindow;			_heightWindow = heightWindow;			initialize();			addEventListener(Event.ADDED_TO_STAGE, added);		}		//		// PRIVATE, PROTECTED		//________________________________________________________________________________________________				protected function initialize():void {			scrollRect = new Rectangle(0, 0, _widthWindow, _heightWindow);			_isDragging = false;			_hasBeenDragged = false;			createBackground();			createTitle();			createHitArea();			addEventListener(MouseEvent.CLICK, sortWindow);		}				private function added(e:Event):void {			removeEventListener(Event.ADDED_TO_STAGE, added);
			stage.addEventListener(Event.RESIZE, updateLayout);			updateLayout();		}				private function createBackground():void {			_background = new Sprite();			_background.graphics.beginFill(0x363636, 1);			_background.graphics.drawRect(0, 0, _widthWindow, _heightWindow);			_background.graphics.beginFill(0xF8F8F8, 1);			_background.graphics.drawRect(3, 15, _widthWindow-6, _heightWindow-18);			addChild(_background);		}		private function createTitle():void {
			// title			var tfTitle:TextFormat = new TextFormat("PF Ronda Seven", 8, 0xFFFFFF);			_titleBarName = new TextField();			_titleBarName.embedFonts = true;			_titleBarName.selectable = false;			_titleBarName.defaultTextFormat = tfTitle;			_titleBarName.autoSize = TextFieldAutoSize.LEFT;			_titleBarName.text = _title;			_titleBarName.x = 2;			_titleBarName.y = -1;			addChild(_titleBarName);
		}		private function createHitArea():void {
			_hit = new Sprite();			_hit.graphics.beginFill(0xFF0000, 0);			_hit.graphics.drawRect(0, 0, _widthWindow, 15);			_hit.addEventListener(MouseEvent.MOUSE_DOWN, mouseHandler);			_hit.addEventListener(MouseEvent.MOUSE_UP, mouseHandler);			_hit.buttonMode = true;			_hit.mouseChildren = false;			addChild(_hit);
		}		private function mouseHandler(e:MouseEvent):void {			switch (e.type) {				case MouseEvent.MOUSE_MOVE:					stage.removeEventListener(Event.RESIZE, updateLayout);					_isDragging = true;					_hasBeenDragged = true;					break;				case MouseEvent.MOUSE_DOWN:					addEventListener(MouseEvent.MOUSE_MOVE, mouseHandler);					sortWindow();					_isDragging = false;					startDrag();					break;				case MouseEvent.MOUSE_UP:					removeEventListener(MouseEvent.MOUSE_MOVE, mouseHandler);					if (_isDragging) {						_isDragging = false;					}					else {						var heightTarget:Number = (scrollRect.height == _heightWindow) ? 15 : _heightWindow;						scrollRect = new Rectangle(0, 0, _widthWindow, heightTarget);						if (!_hasBeenDragged) updateLayout();					}					stopDrag();					break;			}		}				protected function updateLayout(e:Event = null):void {					}				private function sortWindow(e:MouseEvent = null):void {
			if (parent != null) {				parent.setChildIndex(this, parent.numChildren-1);			}
		}				// PUBLIC		//________________________________________________________________________________________________				public function dispose():void {			// dispose objects, graphics and events listeners
			try {				_hit.removeEventListener(MouseEvent.MOUSE_DOWN, mouseHandler);				_hit.removeEventListener(MouseEvent.MOUSE_UP, mouseHandler);				removeEventListener(MouseEvent.CLICK, sortWindow);				stage.removeEventListener(Event.RESIZE, updateLayout);				while (numChildren > 0) removeChildAt(0);
				_titleBarName = null;				_background = null;			} catch(e:Error) {
				trace("Error in", this, "(dispose method):", e.message);
			}
		}				public function close():void {			dispatchEvent(new Event(Event.CLOSE));		}				public function minimize():void {			scrollRect = new Rectangle(0, 0, _widthWindow, 15);		}				public function maximize():void {			scrollRect = new Rectangle(0, 0, _widthWindow, _heightWindow);		}	}}