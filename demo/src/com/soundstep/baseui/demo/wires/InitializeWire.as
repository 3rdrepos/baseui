package com.soundstep.baseui.demo.wires {	import com.soma.core.interfaces.IWire;	import com.soma.core.wire.Wire;	import com.soma.debugger.events.SomaDebuggerEvent;	import com.soundstep.baseui.demo.SomaApplication;	import com.soundstep.baseui.demo.events.ObjectEvent;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	/**	 * <b>Author:</b> Romuald Quantin - <a href="http://www.soundstep.com/" target="_blank">www.soundstep.com</a><br />	 * <b>Company:</b> Less Rain - <a href="http://www.lessrain.com/" target="_blank">www.lessrain.com</a><br />	 * <b>Class version:</b> 1.0<br />	 * <b>Actionscript version:</b> 3.0<br />	 * <b>Copyright:</b> 	 * <br />	 * <b>Date:</b> Feb 16, 2010<br />	 * <b>Usage:</b>	 * @example	 * <listing version="3.0"></listing>	 */		public class InitializeWire extends Wire implements IWire {		//------------------------------------		// private, protected properties		//------------------------------------				private var _textfield:TextField;		//------------------------------------		// public properties		//------------------------------------				public static const NAME:String = "BD::InitializeWire";				//------------------------------------		// constructor		//------------------------------------				public function InitializeWire() {			super(NAME);		}				//		// PRIVATE, PROTECTED		//________________________________________________________________________________________________				override protected function initialize():void {			stage.frameRate = 41;			stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;			// keyboard shortcuts			addKeyboardShortcuts();			// listeners			addEventListener(ObjectEvent.ADD, removeTextfield);		}				private function addKeyboardShortcuts():void {			stage.addEventListener(KeyboardEvent.KEY_DOWN, keyboardhandler);			// info			_textfield = new TextField();			_textfield.defaultTextFormat = new TextFormat("PF Ronda Seven", 8, 0);			_textfield.autoSize = TextFieldAutoSize.LEFT;			_textfield.embedFonts = true;			_textfield.multiline = true;			_textfield.wordWrap = true;			_textfield.width = 300;			_textfield.selectable = false;			_textfield.text = "Press H to hide and show the interface.\nAdd layouts or objects and resize your browser.";			_textfield.x = 10;			_textfield.y = 10;			stage.addChild(_textfield);		}		private function keyboardhandler(e:KeyboardEvent):void {			var wire:UIWire = UIWire(getWire(UIWire.NAME));
			if (e.keyCode == 72) {				wire.layoutPanel.visible = !wire.layoutPanel.visible;				wire.objectPanel.visible = !wire.objectPanel.visible;				if (SomaApplication(soma).debugMode) {					var debugEventType:String = (wire.layoutPanel.visible) ? SomaDebuggerEvent.SHOW_DEBUGGER : SomaDebuggerEvent.HIDE_DEBUGGER;					dispatchEvent(new SomaDebuggerEvent(debugEventType));				}			}			removeTextfield();		}				private function removeTextfield(e:Event = null):void {
			if (_textfield != null) {				stage.removeChild(_textfield);				_textfield = null;			}
		}				// PUBLIC		//________________________________________________________________________________________________							}}